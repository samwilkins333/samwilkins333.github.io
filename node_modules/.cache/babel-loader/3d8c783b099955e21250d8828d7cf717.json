{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx\";\n\nimport React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\nimport { ImageMapping } from '../Assets/Assets';\nimport github from \"../Assets/github.png\";\n\nlet Main = observer(_class = (_class2 = (_temp = class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"loadManager\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"currentPage\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"selectedRepository\", _descriptor3, this);\n\n    this.setSelected = action(repoId => {\n      this.selectedRepository = repoId;\n    });\n    this.onMenuLoaded = action(() => {\n      this.loadManager.MenuLoaded = true;\n    });\n    this.onRepositoriesLoaded = action(() => {\n      this.loadManager.RepositoriesLoaded = true;\n    });\n  }\n\n  render() {\n    const MenuLoaded = this.loadManager.MenuLoaded;\n    const src = this.selectedRepository ? ImageMapping.get(this.selectedRepository) || github : github;\n    let width = \"70%\";\n\n    if (src === github) {\n      width = \"30%\";\n    }\n\n    return React.createElement(\"div\", {\n      className: 'outermost',\n      style: {\n        background: MenuLoaded ? ColorScheme.primary : \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      onLoad: this.onMenuLoaded,\n      transitionDuration: 1500,\n      currentPage: this.currentPage,\n      setCurrentPage: action(page => {\n        this.currentPage = page;\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      style: {\n        opacity: MenuLoaded ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'image-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"display\",\n      alt: \"display\",\n      style: {\n        width\n      },\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), this.currentPage === 1 ? React.createElement(Repositories, {\n      onLoad: this.onRepositoriesLoaded,\n      setSelected: this.setSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"loadManager\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      MenuLoaded: false,\n      RepositoriesLoaded: false\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"currentPage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"selectedRepository\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return undefined;\n  }\n})), _class2)) || _class;\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx"],"names":["React","observer","MenuBar","action","observable","ColorScheme","Repositories","ImageMapping","github","Main","Component","setSelected","repoId","selectedRepository","onMenuLoaded","loadManager","MenuLoaded","onRepositoriesLoaded","RepositoriesLoaded","render","src","get","width","background","primary","currentPage","page","opacity","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\nimport { ImageMapping } from '../Assets/Assets';\nimport github from \"../Assets/github.png\";\n\ninterface LoadManager {\n    MenuLoaded: boolean;\n    RepositoriesLoaded: boolean;\n}\n\n@observer\nexport default class Main extends React.Component<{}> {\n    @observable private loadManager: LoadManager = {\n        MenuLoaded: false,\n        RepositoriesLoaded: false\n    }\n    @observable private currentPage = 0;\n    @observable private selectedRepository: number | undefined = undefined;\n\n    setSelected = action((repoId: number) => {\n        this.selectedRepository = repoId;\n    })\n\n    onMenuLoaded = action(() => {\n        this.loadManager.MenuLoaded = true;\n    })\n\n    onRepositoriesLoaded = action(() => {\n        this.loadManager.RepositoriesLoaded = true;\n    });\n\n    render() {\n        const { MenuLoaded } = this.loadManager;\n        const src = this.selectedRepository ? ImageMapping.get(this.selectedRepository) || github : github;\n        let width = \"70%\";\n        if (src === github) {\n            width = \"30%\";\n        }\n        return (\n            <div\n                className={'outermost'}\n                style={{ background: MenuLoaded ? ColorScheme.primary : \"white\" }}\n            >\n                <MenuBar\n                    onLoad={this.onMenuLoaded}\n                    transitionDuration={1500}\n                    currentPage={this.currentPage}\n                    setCurrentPage={action((page: number) => {\n                        this.currentPage = page;\n                    })}\n                />\n                <div\n                    className={\"body\"}\n                    style={{\n                        opacity: MenuLoaded ? 1 : 0,\n                    }}\n                >\n                    <div className={'image-container'}>\n                        <img\n                            className={\"display\"}\n                            alt={\"display\"}\n                            style={{ width }}\n                            src={src}\n                        />\n                    </div>\n                    {this.currentPage === 1 ? <Repositories\n                        onLoad={this.onRepositoriesLoaded}\n                        setSelected={this.setSelected}\n                    /> : null}\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}