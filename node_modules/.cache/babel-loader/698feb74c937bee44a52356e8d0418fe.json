{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repository.tsx\";\n\nimport React from 'react';\nimport \"./Repository.css\";\nimport { observer } from 'mobx-react';\nimport privateIcon from '../private.png';\nimport { action, observable } from 'mobx';\n\nlet Repository = observer(_class = (_class2 = (_temp = class Repository extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"color\", _descriptor, this);\n\n    this.backlink = e => {\n      const _this$props = this.props,\n            model = _this$props.model,\n            setSelected = _this$props.setSelected;\n\n      if (e.shiftKey) {\n        !model.private && window.open(\"https://github.com/samwilkins333/\".concat(this.props.model.name));\n      } else {\n        setSelected(model.id);\n      }\n    };\n\n    this.setFontColor = action(color => {\n      this.color = color;\n    });\n  }\n\n  render() {\n    const _this$props$model = this.props.model,\n          name = _this$props$model.name,\n          isPrivate = _this$props$model.private;\n    const marginTop = this.props.marginTop;\n    const pending = marginTop === 0;\n    const border = pending ? \"none\" : \"1px solid \".concat(this.color, \"55\");\n    return React.createElement(\"div\", {\n      className: 'repository',\n      onClick: this.backlink,\n      onPointerEnter: () => this.setFontColor(\"#FF0000\"),\n      onPointerLeave: () => this.setFontColor(\"#000000\"),\n      style: {\n        marginTop,\n        marginLeft: pending ? 3 : marginTop,\n        marginRight: pending ? 3 : marginTop,\n        border,\n        cursor: isPrivate ? \"normal\" : \"pointer\",\n        color: this.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, name), isPrivate && !pending ? React.createElement(\"img\", {\n      src: privateIcon,\n      width: 40,\n      className: 'private',\n      title: 'This repository is private',\n      alt: 'This repository is private',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : null);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"color\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"#000000\";\n  }\n})), _class2)) || _class;\n\nexport { Repository as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repository.tsx"],"names":["React","observer","privateIcon","action","observable","Repository","Component","backlink","e","props","model","setSelected","shiftKey","private","window","open","name","id","setFontColor","color","render","isPrivate","marginTop","pending","border","marginLeft","marginRight","cursor"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;;IASqBC,U,GADpBJ,Q,8BAAD,MACqBI,UADrB,SACwCL,KAAK,CAACM,SAD9C,CACyE;AAAA;AAAA;;AAAA;;AAAA,SAGrEC,QAHqE,GAGzDC,CAAD,IAA2C;AAAA,0BACnB,KAAKC,KADc;AAAA,YAC1CC,KAD0C,eAC1CA,KAD0C;AAAA,YACnCC,WADmC,eACnCA,WADmC;;AAElD,UAAIH,CAAC,CAACI,QAAN,EAAgB;AACZ,SAACF,KAAK,CAACG,OAAP,IAAkBC,MAAM,CAACC,IAAP,4CAAgD,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,IAAjE,EAAlB;AACH,OAFD,MAEO;AACHL,QAAAA,WAAW,CAACD,KAAK,CAACO,EAAP,CAAX;AACH;AACJ,KAVoE;;AAAA,SAYrEC,YAZqE,GAYtDf,MAAM,CAAEgB,KAAD,IAAmB;AACrC,WAAKA,KAAL,GAAaA,KAAb;AACH,KAFoB,CAZgD;AAAA;;AAgBrEC,EAAAA,MAAM,GAAG;AAAA,8BACgC,KAAKX,KAAL,CAAWC,KAD3C;AAAA,UACGM,IADH,qBACGA,IADH;AAAA,UACkBK,SADlB,qBACSR,OADT;AAEL,UAAMS,SAAS,GAAG,KAAKb,KAAL,CAAWa,SAA7B;AACA,UAAMC,OAAO,GAAGD,SAAS,KAAK,CAA9B;AACA,UAAME,MAAM,GAAGD,OAAO,GAAG,MAAH,uBAAyB,KAAKJ,KAA9B,OAAtB;AACA,WACI;AACI,MAAA,SAAS,EAAE,YADf;AAEI,MAAA,OAAO,EAAE,KAAKZ,QAFlB;AAGI,MAAA,cAAc,EAAE,MAAM,KAAKW,YAAL,CAAkB,SAAlB,CAH1B;AAII,MAAA,cAAc,EAAE,MAAM,KAAKA,YAAL,CAAkB,SAAlB,CAJ1B;AAKI,MAAA,KAAK,EAAE;AACHI,QAAAA,SADG;AAEHG,QAAAA,UAAU,EAAEF,OAAO,GAAG,CAAH,GAAOD,SAFvB;AAGHI,QAAAA,WAAW,EAAEH,OAAO,GAAG,CAAH,GAAOD,SAHxB;AAIHE,QAAAA,MAJG;AAKHG,QAAAA,MAAM,EAAEN,SAAS,GAAG,QAAH,GAAc,SAL5B;AAMHF,QAAAA,KAAK,EAAE,KAAKA;AANT,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,IAAN,CAdJ,EAeKK,SAAS,IAAI,CAACE,OAAd,GAAwB;AACrB,MAAA,GAAG,EAAErB,WADgB;AAErB,MAAA,KAAK,EAAE,EAFc;AAGrB,MAAA,SAAS,EAAE,SAHU;AAIrB,MAAA,KAAK,EAAE,4BAJc;AAKrB,MAAA,GAAG,EAAE,4BALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAMI,IArBT,CADJ;AAyBH;;AA9CoE,C,gFACpEE,U;;;;;WAAmC,S;;;;SADnBC,U","sourcesContent":["import React from 'react';\nimport \"./Repository.css\";\nimport { observer } from 'mobx-react';\nimport privateIcon from '../private.png';\nimport { action, observable } from 'mobx';\n\nexport interface RepositoryProps {\n    model: any;\n    marginTop: number;\n    setSelected: (repoId: number) => void;\n}\n\n@observer\nexport default class Repository extends React.Component<RepositoryProps> {\n    @observable private color: string = \"#000000\";\n\n    backlink = (e: React.PointerEvent<HTMLDivElement>) => {\n        const { model, setSelected } = this.props;\n        if (e.shiftKey) {\n            !model.private && window.open(`https://github.com/samwilkins333/${this.props.model.name}`);\n        } else {\n            setSelected(model.id);\n        }\n    }\n\n    setFontColor = action((color: string) => {\n        this.color = color;\n    })\n\n    render() {\n        const { name, private: isPrivate } = this.props.model;\n        const marginTop = this.props.marginTop;\n        const pending = marginTop === 0\n        const border = pending ? \"none\" : `1px solid ${this.color}55`;\n        return (\n            <div\n                className={'repository'}\n                onClick={this.backlink}\n                onPointerEnter={() => this.setFontColor(\"#FF0000\")}\n                onPointerLeave={() => this.setFontColor(\"#000000\")}\n                style={{\n                    marginTop,\n                    marginLeft: pending ? 3 : marginTop,\n                    marginRight: pending ? 3 : marginTop,\n                    border,\n                    cursor: isPrivate ? \"normal\" : \"pointer\",\n                    color: this.color,\n                }}\n            >\n                <div>{name}</div>\n                {isPrivate && !pending ? <img\n                    src={privateIcon}\n                    width={40}\n                    className={'private'}\n                    title={'This repository is private'}\n                    alt={'This repository is private'}\n                /> : null}\n            </div>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}