{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx\";\n\nimport React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\nimport { ImageMapping } from '../Assets/Assets';\nimport github from \"../Assets/github.png\";\nimport download from \"../Assets/download.png\";\nimport me from \"../Assets/samw.png\";\n\nlet Main = observer(_class = (_class2 = (_temp = class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.repositories = React.createRef();\n\n    _initializerDefineProperty(this, \"loadManager\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"currentPage\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"selectedRepository\", _descriptor3, this);\n\n    this.setSelected = action(repository => {\n      if (this.selectedRepository) {\n        this.selectedRepository.deselect();\n      }\n\n      this.selectedRepository = repository;\n    });\n    this.onMenuLoaded = action(() => {\n      this.loadManager.MenuLoaded = true;\n      const current = this.repositories.current;\n      current && current.populate();\n    });\n    this.onRepositoriesLoaded = action(() => {\n      this.loadManager.RepositoriesLoaded = true;\n    });\n\n    this.openRepository = () => {\n      if (this.selectedRepository) {\n        this.selectedRepository.open();\n      }\n    };\n\n    this.metaSpan = url => {\n      return React.createElement(\"span\", {\n        onClick: () => window.open(url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, url);\n    };\n  }\n\n  render() {\n    const _this$loadManager = this.loadManager,\n          MenuLoaded = _this$loadManager.MenuLoaded,\n          RepositoriesLoaded = _this$loadManager.RepositoriesLoaded;\n    const src = this.selectedRepository ? ImageMapping.get(this.selectedRepository.props.model.id) || github : github;\n    let width = \"70%\";\n    const noContent = src === github;\n\n    if (noContent) {\n      width = \"30%\";\n    }\n\n    const valid = !this.selectedRepository || !noContent;\n    const border = valid ? \"none\" : \"2px solid red\";\n    const borderRadius = noContent ? \"50%\" : undefined;\n    const opacity = this.selectedRepository ? 1 : 0;\n    return React.createElement(\"div\", {\n      className: 'outermost',\n      style: {\n        background: MenuLoaded ? ColorScheme.primary : \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      onLoad: this.onMenuLoaded,\n      transitionDuration: 1500,\n      currentPage: this.currentPage,\n      setCurrentPage: action(page => {\n        this.currentPage = page;\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      style: {\n        opacity: MenuLoaded ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'about',\n      style: {\n        opacity: this.currentPage === 0 ? 1 : 0,\n        transition: \"0.5s ease all\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'image-container profile',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: 'profile-display',\n      src: me,\n      alt: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'links',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.metaSpan(\"www.linkedin.com/in/sam-wilkins-173b09132\")))), React.createElement(\"div\", {\n      style: {\n        opacity: this.currentPage === 1 ? 1 : 0,\n        transition: \"0.5s ease all\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'image-container',\n      style: {\n        opacity: RepositoriesLoaded ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: 'link-button',\n      onClick: this.openRepository,\n      style: {\n        top: 10,\n        right: 10,\n        opacity,\n        transition: \"0.5s opacity ease\"\n      },\n      src: github,\n      title: \"Navigate to Repository\",\n      alt: \"Navigate to Repository\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'link-button',\n      onClick: this.openRepository,\n      style: {\n        pointerEvents: \"none\",\n        top: 10,\n        right: 55,\n        opacity: this.selectedRepository ? 0.3 : 0,\n        transition: \"0.5s opacity ease\"\n      },\n      src: download,\n      title: \"Download Content\",\n      alt: \"Download Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"display\",\n      alt: \"display\",\n      style: {\n        width,\n        border,\n        borderRadius,\n        cursor: \"pointer\"\n      },\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), valid ? null : React.createElement(\"span\", {\n      className: 'unavailable',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Content Unavailable\")), React.createElement(Repositories, {\n      ref: this.repositories,\n      onLoad: this.onRepositoriesLoaded,\n      setSelected: this.setSelected,\n      currentPage: this.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"loadManager\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      MenuLoaded: false,\n      RepositoriesLoaded: false\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"currentPage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 1;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"selectedRepository\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return undefined;\n  }\n})), _class2)) || _class;\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx"],"names":["React","observer","MenuBar","action","observable","ColorScheme","Repositories","ImageMapping","github","download","me","Main","Component","repositories","createRef","setSelected","repository","selectedRepository","deselect","onMenuLoaded","loadManager","MenuLoaded","current","populate","onRepositoriesLoaded","RepositoriesLoaded","openRepository","open","metaSpan","url","window","render","src","get","props","model","id","width","noContent","valid","border","borderRadius","undefined","opacity","background","primary","currentPage","page","transition","top","right","pointerEvents","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\nimport { ImageMapping } from '../Assets/Assets';\nimport github from \"../Assets/github.png\";\nimport download from \"../Assets/download.png\"\nimport me from \"../Assets/samw.png\";\nimport Repository from '../Repositories/Repository';\n\ninterface LoadManager {\n    MenuLoaded: boolean;\n    RepositoriesLoaded: boolean;\n}\n\n@observer\nexport default class Main extends React.Component<{}> {\n    private repositories = React.createRef<Repositories>();\n    @observable private loadManager: LoadManager = {\n        MenuLoaded: false,\n        RepositoriesLoaded: false\n    }\n    @observable private currentPage = 1;\n    @observable private selectedRepository: Repository | undefined = undefined;\n\n    setSelected = action((repository: Repository | undefined) => {\n        if (this.selectedRepository) {\n            this.selectedRepository.deselect();\n        }\n        this.selectedRepository = repository;\n    })\n\n    onMenuLoaded = action(() => {\n        this.loadManager.MenuLoaded = true;\n        const { current } = this.repositories;\n        current && current.populate();\n    })\n\n    onRepositoriesLoaded = action(() => {\n        this.loadManager.RepositoriesLoaded = true;\n    });\n\n    openRepository = () => {\n        if (this.selectedRepository) {\n            this.selectedRepository.open()\n        }\n    }\n\n    metaSpan = (url: string) => {\n        return <span onClick={() => window.open(url)}>{url}</span>\n    }\n\n    render() {\n        const { MenuLoaded, RepositoriesLoaded } = this.loadManager;\n        const src = this.selectedRepository ? ImageMapping.get(this.selectedRepository.props.model.id) || github : github;\n        let width = \"70%\";\n        const noContent = src === github;\n        if (noContent) {\n            width = \"30%\";\n        }\n        const valid = !this.selectedRepository || !noContent;\n        const border = valid ? \"none\" : \"2px solid red\";\n        const borderRadius = noContent ? \"50%\" : undefined;\n        const opacity = this.selectedRepository ? 1 : 0;\n        return (\n            <div\n                className={'outermost'}\n                style={{ background: MenuLoaded ? ColorScheme.primary : \"white\" }}\n            >\n                <MenuBar\n                    onLoad={this.onMenuLoaded}\n                    transitionDuration={1500}\n                    currentPage={this.currentPage}\n                    setCurrentPage={action((page: number) => {\n                        this.currentPage = page;\n                    })}\n                />\n                <div\n                    className={\"body\"}\n                    style={{\n                        opacity: MenuLoaded ? 1 : 0,\n                    }}\n                >\n                    <div className={'about'} style={{\n                        opacity: this.currentPage === 0 ? 1 : 0,\n                        transition: \"0.5s ease all\"\n                    }}>\n                        <div className={'image-container profile'}>\n                            <img\n                                className={'profile-display'}\n                                src={me}\n                                alt=\"Profile\"\n                            />\n                            <div className={'links'}>\n                                {this.metaSpan(\"www.linkedin.com/in/sam-wilkins-173b09132\")}\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{\n                        opacity: this.currentPage === 1 ? 1 : 0,\n                        transition: \"0.5s ease all\"\n                    }}>\n                        <div\n                            className={'image-container'}\n                            style={{\n                                opacity: RepositoriesLoaded ? 1 : 0,\n                            }}\n                        >\n                            <img\n                                className={'link-button'}\n                                onClick={this.openRepository}\n                                style={{\n                                    top: 10,\n                                    right: 10,\n                                    opacity,\n                                    transition: \"0.5s opacity ease\"\n                                }}\n                                src={github}\n                                title={\"Navigate to Repository\"}\n                                alt=\"Navigate to Repository\"\n                            />\n                            <img\n                                className={'link-button'}\n                                onClick={this.openRepository}\n                                style={{\n                                    pointerEvents: \"none\",\n                                    top: 10,\n                                    right: 55,\n                                    opacity: this.selectedRepository ? 0.3 : 0,\n                                    transition: \"0.5s opacity ease\"\n                                }}\n                                src={download}\n                                title={\"Download Content\"}\n                                alt=\"Download Content\"\n                            />\n                            <img\n                                className={\"display\"}\n                                alt={\"display\"}\n                                style={{ width, border, borderRadius, cursor: \"pointer\" }}\n                                src={src}\n                            />\n                            {valid ? null : <span className={'unavailable'}>Content Unavailable</span>}\n                        </div>\n                        <Repositories\n                            ref={this.repositories}\n                            onLoad={this.onRepositoriesLoaded}\n                            setSelected={this.setSelected}\n                            currentPage={this.currentPage}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}