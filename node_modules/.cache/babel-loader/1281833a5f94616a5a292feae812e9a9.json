{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _descriptor5,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/MenuBar/MenuBar.tsx\";\n\nimport React from 'react';\nimport { observer } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\nimport \"./MenuBar.css\";\nimport { ColorScheme } from '../ColorScheme';\nimport { Page } from '../Pages';\n\nlet MenuBar = observer(_class = (_class2 = (_temp = class MenuBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"textShiftExecuted\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"transitionExecuted\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"height\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"expanded\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"interactive\", _descriptor5, this);\n\n    this.showOthers = () => {\n      if (!this.expanded) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: 'menu-items heading',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, Object.values(Page).filter(page => page.title !== this.currentPageTitle).map(page => React.createElement(\"div\", {\n        className: 'page',\n        key: page.title,\n        onClick: () => this.props.setCurrentPage(Object.values(Page).indexOf(page)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, page.title)));\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          transitionDuration = _this$props.transitionDuration,\n          onLoad = _this$props.onLoad;\n    setTimeout(action(() => this.textShiftExecuted = true), transitionDuration * 2 / 3);\n    setTimeout(action(() => {\n      this.transitionExecuted = true;\n      this.height = 60;\n      onLoad();\n    }), transitionDuration);\n    setTimeout(action(() => {\n      this.interactive = true;\n      this.props.setCurrentPage(1);\n    }), transitionDuration + 1000);\n  }\n\n  get currentPageTitle() {\n    return Page[this.props.currentPage].title;\n  }\n\n  render() {\n    const title = React.createElement(\"span\", {\n      className: 'samwilkins',\n      style: {\n        color: this.transitionExecuted ? \"white\" : ColorScheme.samwilkins\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"{ \".concat(this.interactive ? this.currentPageTitle : 'samwilkins.me', \" }\"));\n    return React.createElement(\"div\", {\n      className: 'container',\n      style: {\n        height: this.expanded ? window.screen.availHeight : this.height\n      },\n      onClick: action(() => this.expanded = !this.expanded),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'import-phrase',\n      style: {\n        left: this.textShiftExecuted ? -85 : 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"import \", title, \" from react-typescript\")), React.createElement(\"div\", {\n      className: 'white-hr',\n      style: {\n        opacity: this.expanded ? 0.5 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.showOthers());\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"textShiftExecuted\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"transitionExecuted\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"height\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"expanded\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"interactive\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n})), _class2)) || _class;\n\nexport { MenuBar as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/MenuBar/MenuBar.tsx"],"names":["React","observer","observable","action","ColorScheme","Page","MenuBar","Component","showOthers","expanded","Object","values","filter","page","title","currentPageTitle","map","props","setCurrentPage","indexOf","componentDidMount","transitionDuration","onLoad","setTimeout","textShiftExecuted","transitionExecuted","height","interactive","currentPage","render","color","samwilkins","window","screen","availHeight","left","opacity"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,UAArB;;IAUqBC,O,GADpBL,Q,8BAAD,MACqBK,OADrB,SACqCN,KAAK,CAACO,SAD3C,CACmE;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAyB/DC,UAzB+D,GAyBlD,MAAM;AACf,UAAI,CAAC,KAAKC,QAAV,EAAoB;AAChB,eAAQ,IAAR;AACH;;AACD,aACI;AAAK,QAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoBO,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,KAAKC,gBAAvD,EAAyEC,GAAzE,CAA6EH,IAAI,IAC9E;AACI,QAAA,SAAS,EAAE,MADf;AAEI,QAAA,GAAG,EAAEA,IAAI,CAACC,KAFd;AAGI,QAAA,OAAO,EAAE,MAAM,KAAKG,KAAL,CAAWC,cAAX,CAA0BR,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoBc,OAApB,CAA4BN,IAA5B,CAA1B,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIEA,IAAI,CAACC,KAJP,CADH,CADL,CADJ;AAWH,KAxC8D;AAAA;;AAO/DM,EAAAA,iBAAiB,GAAG;AAAA,wBACuB,KAAKH,KAD5B;AAAA,UACRI,kBADQ,eACRA,kBADQ;AAAA,UACYC,MADZ,eACYA,MADZ;AAEhBC,IAAAA,UAAU,CAACpB,MAAM,CAAC,MAAM,KAAKqB,iBAAL,GAAyB,IAAhC,CAAP,EAA8CH,kBAAkB,GAAG,CAArB,GAAyB,CAAvE,CAAV;AACAE,IAAAA,UAAU,CAACpB,MAAM,CAAC,MAAM;AACpB,WAAKsB,kBAAL,GAA0B,IAA1B;AACA,WAAKC,MAAL,GAAc,EAAd;AACAJ,MAAAA,MAAM;AACT,KAJgB,CAAP,EAIND,kBAJM,CAAV;AAKAE,IAAAA,UAAU,CAACpB,MAAM,CAAC,MAAM;AACpB,WAAKwB,WAAL,GAAmB,IAAnB;AACA,WAAKV,KAAL,CAAWC,cAAX,CAA0B,CAA1B;AACH,KAHgB,CAAP,EAGNG,kBAAkB,GAAG,IAHf,CAAV;AAIH;;AAED,MAAYN,gBAAZ,GAA+B;AAC3B,WAAOV,IAAI,CAAC,KAAKY,KAAL,CAAWW,WAAZ,CAAJ,CAA6Bd,KAApC;AACH;;AAmBDe,EAAAA,MAAM,GAAG;AACL,UAAMf,KAAK,GACP;AACI,MAAA,SAAS,EAAE,YADf;AAEI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE,KAAKL,kBAAL,GAA0B,OAA1B,GAAoCrB,WAAW,CAAC2B;AAAzD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIU,KAAKJ,WAAL,GAAmB,KAAKZ,gBAAxB,GAA2C,eAJrD,QADJ;AAQA,WACI;AACI,MAAA,SAAS,EAAE,WADf;AAEI,MAAA,KAAK,EAAE;AACHW,QAAAA,MAAM,EAAE,KAAKjB,QAAL,GAAgBuB,MAAM,CAACC,MAAP,CAAcC,WAA9B,GAA4C,KAAKR;AADtD,OAFX;AAKI,MAAA,OAAO,EAAEvB,MAAM,CAAC,MAAM,KAAKM,QAAL,GAAgB,CAAC,KAAKA,QAA7B,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AACI,MAAA,SAAS,EAAE,eADf;AAEI,MAAA,KAAK,EAAE;AAAE0B,QAAAA,IAAI,EAAE,KAAKX,iBAAL,GAAyB,CAAC,EAA1B,GAA+B;AAAvC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,SAAS,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoCV,KAApC,2BAJJ,CAPJ,EAaI;AAAK,MAAA,SAAS,EAAE,UAAhB;AAA4B,MAAA,KAAK,EAAE;AAAEsB,QAAAA,OAAO,EAAE,KAAK3B,QAAL,GAAgB,GAAhB,GAAsB;AAAjC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAcK,KAAKD,UAAL,EAdL,CADJ;AAkBH;;AArE8D,C,4FAC9DN,U;;;;;WAAuC,K;;uFACvCA,U;;;;;WAAwC,K;;2EACxCA,U;;;;;WAA4B,C;;6EAC5BA,U;;;;;WAA8B,K;;gFAC9BA,U;;;;;WAAiC,K;;;;SALjBI,O","sourcesContent":["import React from 'react';\nimport { observer } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\nimport \"./MenuBar.css\";\nimport { ColorScheme } from '../ColorScheme';\nimport { Page } from '../Pages';\n\nexport interface MenuBarProps {\n    onLoad: () => void;\n    transitionDuration: number;\n    currentPage: number;\n    setCurrentPage: (page: number) => void;\n}\n\n@observer\nexport default class MenuBar extends React.Component<MenuBarProps> {\n    @observable private textShiftExecuted = false;\n    @observable private transitionExecuted = false;\n    @observable private height = 0;\n    @observable private expanded = false;\n    @observable private interactive = false;\n\n    componentDidMount() {\n        const { transitionDuration, onLoad } = this.props;\n        setTimeout(action(() => this.textShiftExecuted = true), transitionDuration * 2 / 3);\n        setTimeout(action(() => {\n            this.transitionExecuted = true;\n            this.height = 60;\n            onLoad();\n        }), transitionDuration);\n        setTimeout(action(() => {\n            this.interactive = true;\n            this.props.setCurrentPage(1)\n        }), transitionDuration + 1000);\n    }\n\n    private get currentPageTitle() {\n        return Page[this.props.currentPage].title;\n    }\n\n    showOthers = () => {\n        if (!this.expanded) {\n            return (null);\n        }\n        return (\n            <div className={'menu-items heading'}>\n                {Object.values(Page).filter(page => page.title !== this.currentPageTitle).map(page => (\n                    <div\n                        className={'page'}\n                        key={page.title}\n                        onClick={() => this.props.setCurrentPage(Object.values(Page).indexOf(page))}\n                    >{page.title}</div>\n                ))}\n            </div>\n        )\n    }\n\n    render() {\n        const title = (\n            <span\n                className={'samwilkins'}\n                style={{ color: this.transitionExecuted ? \"white\" : ColorScheme.samwilkins }}\n            >\n                {`{ ${this.interactive ? this.currentPageTitle : 'samwilkins.me'} }`}\n            </span>\n        );\n        return (\n            <div\n                className={'container'}\n                style={{\n                    height: this.expanded ? window.screen.availHeight : this.height,\n                }}\n                onClick={action(() => this.expanded = !this.expanded)}\n            >\n                <div\n                    className={'import-phrase'}\n                    style={{ left: this.textShiftExecuted ? -85 : 20 }}\n                >\n                    <span className={'heading'}>import {title} from react-typescript</span>\n                </div>\n                <div className={'white-hr'} style={{ opacity: this.expanded ? 0.5 : 0 }}></div>\n                {this.showOthers()}\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}