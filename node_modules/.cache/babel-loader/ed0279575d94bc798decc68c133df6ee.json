{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx\";\n\nimport React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\n\nlet Main = observer(_class = (_class2 = (_temp = class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"repositories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loadManager\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"currentPage\", _descriptor3, this);\n\n    this.onMenuLoaded = action(() => {\n      this.loadManager.MenuLoaded = true;\n      const repositories = this.repositories.current;\n      repositories && repositories.populate();\n    });\n    this.onRepositoriesLoaded = action(() => {\n      this.loadManager.RepositoriesLoaded = true;\n    });\n\n    this.renderPage = () => {\n      console.log(this.currentPage);\n      return this.currentPage === 1 ? React.createElement(Repositories, {\n        ref: this.repositories,\n        onLoad: this.onRepositoriesLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) : null;\n    };\n  }\n\n  render() {\n    const MenuLoaded = this.loadManager.MenuLoaded;\n    return React.createElement(\"div\", {\n      className: 'outermost',\n      style: {\n        background: MenuLoaded ? ColorScheme.primary : \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      onLoad: this.onMenuLoaded,\n      transitionDuration: 1500,\n      currentPage: this.currentPage,\n      setCurrentPage: action(page => this.currentPage = page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      style: {\n        opacity: MenuLoaded ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.currentPage === 1 ? React.createElement(Repositories, {\n      ref: this.repositories,\n      onLoad: this.onRepositoriesLoaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"repositories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return React.createRef();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"loadManager\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      MenuLoaded: false,\n      RepositoriesLoaded: false\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"currentPage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n})), _class2)) || _class;\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Main/Main.tsx"],"names":["React","observer","MenuBar","action","observable","ColorScheme","Repositories","Main","Component","onMenuLoaded","loadManager","MenuLoaded","repositories","current","populate","onRepositoriesLoaded","RepositoriesLoaded","renderPage","console","log","currentPage","render","background","primary","page","opacity","createRef"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;IAQqBC,I,GADpBN,Q,8BAAD,MACqBM,IADrB,SACkCP,KAAK,CAACQ,SADxC,CACsD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAQlDC,YARkD,GAQnCN,MAAM,CAAC,MAAM;AACxB,WAAKO,WAAL,CAAiBC,UAAjB,GAA8B,IAA9B;AACA,YAAMC,YAAY,GAAG,KAAKA,YAAL,CAAkBC,OAAvC;AACAD,MAAAA,YAAY,IAAIA,YAAY,CAACE,QAAb,EAAhB;AACH,KAJoB,CAR6B;AAAA,SAclDC,oBAdkD,GAc3BZ,MAAM,CAAC,MAAM;AAChC,WAAKO,WAAL,CAAiBM,kBAAjB,GAAsC,IAAtC;AACH,KAF4B,CAdqB;;AAAA,SAkBlDC,UAlBkD,GAkBrC,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,WAAjB;AACA,aAAO,KAAKA,WAAL,KAAqB,CAArB,GAAyB,oBAAC,YAAD;AAC5B,QAAA,GAAG,EAAE,KAAKR,YADkB;AAE5B,QAAA,MAAM,EAAE,KAAKG,oBAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAGF,IAHL;AAIH,KAxBiD;AAAA;;AA0BlDM,EAAAA,MAAM,GAAG;AAAA,UACGV,UADH,GACkB,KAAKD,WADvB,CACGC,UADH;AAEL,WACI;AACI,MAAA,SAAS,EAAE,WADf;AAEI,MAAA,KAAK,EAAE;AAAEW,QAAAA,UAAU,EAAEX,UAAU,GAAGN,WAAW,CAACkB,OAAf,GAAyB;AAAjD,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,OAAD;AACI,MAAA,MAAM,EAAE,KAAKd,YADjB;AAEI,MAAA,kBAAkB,EAAE,IAFxB;AAGI,MAAA,WAAW,EAAE,KAAKW,WAHtB;AAII,MAAA,cAAc,EAAEjB,MAAM,CAAEqB,IAAD,IAAkB,KAAKJ,WAAL,GAAmBI,IAAtC,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUI;AACI,MAAA,SAAS,EAAE,MADf;AAEI,MAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAEd,UAAU,GAAG,CAAH,GAAO;AADvB,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKS,WAAL,KAAqB,CAArB,GAAyB,oBAAC,YAAD;AACtB,MAAA,GAAG,EAAE,KAAKR,YADY;AAEtB,MAAA,MAAM,EAAE,KAAKG,oBAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAGI,IATT,CAVJ,CADJ;AAwBH;;AApDiD,C,uFACjDX,U;;;;;WAAkCJ,KAAK,CAAC0B,SAAN,E;;gFAClCtB,U;;;;;WAA8C;AAC3CO,MAAAA,UAAU,EAAE,KAD+B;AAE3CK,MAAAA,kBAAkB,EAAE;AAFuB,K;;gFAI9CZ,U;;;;;WAAiC,C;;;;SANjBG,I","sourcesContent":["import React from 'react';\nimport \"./Main.css\";\nimport { observer } from \"mobx-react\";\nimport MenuBar from '../MenuBar/MenuBar';\nimport { action, observable } from 'mobx';\nimport { ColorScheme } from \"../ColorScheme\";\nimport Repositories from '../Repositories/Repositories';\n\ninterface LoadManager {\n    MenuLoaded: boolean;\n    RepositoriesLoaded: boolean;\n}\n\n@observer\nexport default class Main extends React.Component<{}> {\n    @observable private repositories = React.createRef<Repositories>();\n    @observable private loadManager: LoadManager = {\n        MenuLoaded: false,\n        RepositoriesLoaded: false\n    }\n    @observable private currentPage = 0;\n\n    onMenuLoaded = action(() => {\n        this.loadManager.MenuLoaded = true;\n        const repositories = this.repositories.current;\n        repositories && repositories.populate();\n    })\n\n    onRepositoriesLoaded = action(() => {\n        this.loadManager.RepositoriesLoaded = true;\n    });\n\n    renderPage = () => {\n        console.log(this.currentPage);\n        return this.currentPage === 1 ? <Repositories\n            ref={this.repositories}\n            onLoad={this.onRepositoriesLoaded}\n        /> : null\n    }\n\n    render() {\n        const { MenuLoaded } = this.loadManager;\n        return (\n            <div\n                className={'outermost'}\n                style={{ background: MenuLoaded ? ColorScheme.primary : \"white\" }}\n            >\n                <MenuBar\n                    onLoad={this.onMenuLoaded}\n                    transitionDuration={1500}\n                    currentPage={this.currentPage}\n                    setCurrentPage={action((page: number) => this.currentPage = page)}\n                />\n                <div\n                    className={\"body\"}\n                    style={{\n                        opacity: MenuLoaded ? 1 : 0,\n                    }}\n                >\n                    {this.currentPage === 1 ? <Repositories\n                        ref={this.repositories}\n                        onLoad={this.onRepositoriesLoaded}\n                    /> : null}\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}