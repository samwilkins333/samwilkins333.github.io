{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/samwilkins333.github.io/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/samwilkins333.github.io/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/samwilkins333.github.io/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/samwilkins333.github.io/src/Repositories/Repositories.tsx\";\n\nimport React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Repository from './Repository';\nimport { BatchedArray, TimeUnit } from \"array-batcher\";\nimport { ColorScheme } from '../ColorScheme';\nimport StoredRepositories from '../Assets/repositories';\nconst username = \"samwilkins333\";\n\nlet Repositories = observer(_class = (_class2 = (_temp = class Repositories extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"repositories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"background\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"marginTop\", _descriptor3, this);\n\n    this.populate = async () => {\n      const mine = StoredRepositories.filter(repo => repo.full_name.startsWith(username));\n      await BatchedArray.from(mine, {\n        batchSize: 1\n      }).batchedForEachNaiveInterval({\n        magnitude: 100,\n        unit: TimeUnit.Milliseconds\n      }, batch => {\n        runInAction(() => this.repositories.push(...batch));\n      });\n      this.props.onLoad();\n      this.marginTop = 3;\n    };\n\n    this.displayRepositories = () => {\n      return this.repositories.map(repo => React.createElement(Repository, {\n        key: repo.id,\n        model: repo,\n        marginTop: this.marginTop,\n        setSelected: this.props.setSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'repositories-container',\n      onClick: () => this.props.setSelected(undefined),\n      style: {\n        background: this.background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.displayRepositories());\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"repositories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"background\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return ColorScheme.primary;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"marginTop\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n})), _class2)) || _class;\n\nexport { Repositories as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/samwilkins333.github.io/src/Repositories/Repositories.tsx"],"names":["React","observable","runInAction","observer","Repository","BatchedArray","TimeUnit","ColorScheme","StoredRepositories","username","Repositories","Component","populate","mine","filter","repo","full_name","startsWith","from","batchSize","batchedForEachNaiveInterval","magnitude","unit","Milliseconds","batch","repositories","push","props","onLoad","marginTop","displayRepositories","map","id","setSelected","render","undefined","background","primary"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,MAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,eAAvC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,MAAMC,QAAQ,GAAG,eAAjB;;IASqBC,Y,GADpBP,Q,8BAAD,MACqBO,YADrB,SAC0CV,KAAK,CAACW,SADhD,CAC6E;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAKzEC,QALyE,GAK9D,YAAY;AACnB,YAAMC,IAAI,GAAGL,kBAAkB,CAACM,MAAnB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,UAAf,CAA0BR,QAA1B,CAAlC,CAAb;AACA,YAAMJ,YAAY,CAACa,IAAb,CAAkBL,IAAlB,EAAwB;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAxB,EAA0CC,2BAA1C,CACF;AAAEC,QAAAA,SAAS,EAAE,GAAb;AAAkBC,QAAAA,IAAI,EAAEhB,QAAQ,CAACiB;AAAjC,OADE,EAEFC,KAAK,IAAI;AACLtB,QAAAA,WAAW,CAAC,MAAM,KAAKuB,YAAL,CAAkBC,IAAlB,CAAuB,GAAGF,KAA1B,CAAP,CAAX;AACH,OAJC,CAAN;AAMA,WAAKG,KAAL,CAAWC,MAAX;AACA,WAAKC,SAAL,GAAiB,CAAjB;AACH,KAfwE;;AAAA,SAiBjEC,mBAjBiE,GAiB3C,MAAM;AAChC,aAAO,KAAKL,YAAL,CAAkBM,GAAlB,CAAsBhB,IAAI,IAC7B,oBAAC,UAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACiB,EADd;AAEI,QAAA,KAAK,EAAEjB,IAFX;AAGI,QAAA,SAAS,EAAE,KAAKc,SAHpB;AAII,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWM,WAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAQH,KA1BwE;AAAA;;AA4BzEC,EAAAA,MAAM,GAAG;AACL,WACI;AACI,MAAA,SAAS,EAAE,wBADf;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWM,WAAX,CAAuBE,SAAvB,CAFnB;AAGI,MAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,KAAKA;AADd,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,KAAKN,mBAAL,EAPL,CADJ;AAWH;;AAxCwE,C,uFACxE7B,U;;;;;WAAyC,E;;+EACzCA,U;;;;;WAAgCM,WAAW,CAAC8B,O;;8EAC5CpC,U;;;;;WAA+B,C;;;;SAHfS,Y","sourcesContent":["import React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Repository from './Repository';\nimport { BatchedArray, TimeUnit } from \"array-batcher\";\nimport { ColorScheme } from '../ColorScheme';\nimport StoredRepositories from '../Assets/repositories';\n\nconst username = \"samwilkins333\";\n\nexport interface RepositoriesProps {\n    onLoad: () => void;\n    setSelected: (repository: Repository | undefined) => void;\n    currentPage: number;\n}\n\n@observer\nexport default class Repositories extends React.Component<RepositoriesProps> {\n    @observable private repositories: any[] = [];\n    @observable private background = ColorScheme.primary;\n    @observable private marginTop = 0;\n\n    populate = async () => {\n        const mine = StoredRepositories.filter(repo => repo.full_name.startsWith(username));\n        await BatchedArray.from(mine, { batchSize: 1 }).batchedForEachNaiveInterval(\n            { magnitude: 100, unit: TimeUnit.Milliseconds },\n            batch => {\n                runInAction(() => this.repositories.push(...batch))\n            }\n        );\n        this.props.onLoad();\n        this.marginTop = 3;\n    }\n\n    private displayRepositories = () => {\n        return this.repositories.map(repo =>\n            <Repository\n                key={repo.id}\n                model={repo}\n                marginTop={this.marginTop}\n                setSelected={this.props.setSelected}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div\n                className={'repositories-container'}\n                onClick={() => this.props.setSelected(undefined)}\n                style={{\n                    background: this.background,\n                }}\n            >\n                {this.displayRepositories()}\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}