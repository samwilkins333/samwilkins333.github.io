{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repository.tsx\";\n\nimport React from 'react';\nimport \"./Repository.css\";\nimport { observer } from 'mobx-react';\nimport privateIcon from '../private.png';\nimport { action, observable, runInAction } from 'mobx';\n\nlet Repository = observer(_class = (_class2 = (_temp = class Repository extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"color\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"selected\", _descriptor2, this);\n\n    this.open = () => {\n      !this.props.model.private && window.open(\"https://github.com/samwilkins333/\".concat(this.props.model.name));\n    };\n\n    this.select = e => {\n      if (!this.selected) {\n        runInAction(() => this.selected = true);\n        this.setFontColor(\"#000000\");\n        this.props.setSelected(this);\n      }\n    };\n\n    this.deselect = action(() => {\n      this.selected = false;\n    });\n    this.setFontColor = action(color => {\n      this.color = color;\n    });\n  }\n\n  render() {\n    const _this$props$model = this.props.model,\n          name = _this$props$model.name,\n          isPrivate = _this$props$model.private;\n    const marginTop = this.props.marginTop;\n    const pending = marginTop === 0;\n    const border = pending ? \"none\" : \"1px solid \".concat(this.color).concat(this.selected ? \"FF\" : \"55\");\n    return React.createElement(\"div\", {\n      className: 'repository',\n      onClick: this.select,\n      onPointerEnter: () => !this.selected && this.setFontColor(\"#FF0000\"),\n      onPointerLeave: () => this.setFontColor(\"#000000\"),\n      style: {\n        marginTop,\n        marginLeft: pending ? 3 : marginTop,\n        marginRight: pending ? 3 : marginTop,\n        border,\n        cursor: isPrivate ? \"normal\" : \"pointer\",\n        color: this.color,\n        background: this.selected ? \"rgb(255, 0, 0, 0.3)\" : \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, name), isPrivate && !pending ? React.createElement(\"img\", {\n      src: privateIcon,\n      width: 40,\n      className: 'private',\n      title: 'This repository is private',\n      alt: 'This repository is private',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"color\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"#000000\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"selected\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n})), _class2)) || _class;\n\nexport { Repository as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repository.tsx"],"names":["React","observer","privateIcon","action","observable","runInAction","Repository","Component","open","props","model","private","window","name","select","e","selected","setFontColor","setSelected","deselect","color","render","isPrivate","marginTop","pending","border","marginLeft","marginRight","cursor","background"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,QAAgD,MAAhD;;IASqBC,U,GADpBL,Q,8BAAD,MACqBK,UADrB,SACwCN,KAAK,CAACO,SAD9C,CACyE;AAAA;AAAA;;AAAA;;AAAA;;AAAA,SAIrEC,IAJqE,GAI9D,MAAM;AACT,OAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAlB,IAA6BC,MAAM,CAACJ,IAAP,4CAAgD,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,IAAjE,EAA7B;AACH,KANoE;;AAAA,SAQ7DC,MAR6D,GAQnDC,CAAD,IAA2C;AACxD,UAAI,CAAC,KAAKC,QAAV,EAAoB;AAChBX,QAAAA,WAAW,CAAC,MAAM,KAAKW,QAAL,GAAgB,IAAvB,CAAX;AACA,aAAKC,YAAL,CAAkB,SAAlB;AACA,aAAKR,KAAL,CAAWS,WAAX,CAAuB,IAAvB;AACH;AACJ,KAdoE;;AAAA,SAgBrEC,QAhBqE,GAgB1DhB,MAAM,CAAC,MAAM;AACpB,WAAKa,QAAL,GAAgB,KAAhB;AACH,KAFgB,CAhBoD;AAAA,SAoB7DC,YApB6D,GAoB9Cd,MAAM,CAAEiB,KAAD,IAAmB;AAC7C,WAAKA,KAAL,GAAaA,KAAb;AACH,KAF4B,CApBwC;AAAA;;AAwBrEC,EAAAA,MAAM,GAAG;AAAA,8BACgC,KAAKZ,KAAL,CAAWC,KAD3C;AAAA,UACGG,IADH,qBACGA,IADH;AAAA,UACkBS,SADlB,qBACSX,OADT;AAEL,UAAMY,SAAS,GAAG,KAAKd,KAAL,CAAWc,SAA7B;AACA,UAAMC,OAAO,GAAGD,SAAS,KAAK,CAA9B;AACA,UAAME,MAAM,GAAGD,OAAO,GAAG,MAAH,uBAAyB,KAAKJ,KAA9B,SAAsC,KAAKJ,QAAL,GAAgB,IAAhB,GAAuB,IAA7D,CAAtB;AACA,WACI;AACI,MAAA,SAAS,EAAE,YADf;AAEI,MAAA,OAAO,EAAE,KAAKF,MAFlB;AAGI,MAAA,cAAc,EAAE,MAAM,CAAC,KAAKE,QAAN,IAAkB,KAAKC,YAAL,CAAkB,SAAlB,CAH5C;AAII,MAAA,cAAc,EAAE,MAAM,KAAKA,YAAL,CAAkB,SAAlB,CAJ1B;AAKI,MAAA,KAAK,EAAE;AACHM,QAAAA,SADG;AAEHG,QAAAA,UAAU,EAAEF,OAAO,GAAG,CAAH,GAAOD,SAFvB;AAGHI,QAAAA,WAAW,EAAEH,OAAO,GAAG,CAAH,GAAOD,SAHxB;AAIHE,QAAAA,MAJG;AAKHG,QAAAA,MAAM,EAAEN,SAAS,GAAG,QAAH,GAAc,SAL5B;AAMHF,QAAAA,KAAK,EAAE,KAAKA,KANT;AAOHS,QAAAA,UAAU,EAAE,KAAKb,QAAL,GAAgB,qBAAhB,GAAwC;AAPjD,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,IAAN,CAfJ,EAgBKS,SAAS,IAAI,CAACE,OAAd,GAAwB;AACrB,MAAA,GAAG,EAAEtB,WADgB;AAErB,MAAA,KAAK,EAAE,EAFc;AAGrB,MAAA,SAAS,EAAE,SAHU;AAIrB,MAAA,KAAK,EAAE,4BAJc;AAKrB,MAAA,GAAG,EAAE,4BALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAMI,IAtBT,CADJ;AA0BH;;AAvDoE,C,gFACpEE,U;;;;;WAAmC,S;;6EACnCA,U;;;;;WAA8B,K;;;;SAFdE,U","sourcesContent":["import React from 'react';\nimport \"./Repository.css\";\nimport { observer } from 'mobx-react';\nimport privateIcon from '../private.png';\nimport { action, observable, runInAction } from 'mobx';\n\nexport interface RepositoryProps {\n    model: any;\n    marginTop: number;\n    setSelected: (repository: Repository) => void;\n}\n\n@observer\nexport default class Repository extends React.Component<RepositoryProps> {\n    @observable private color: string = \"#000000\";\n    @observable private selected = false;\n\n    open = () => {\n        !this.props.model.private && window.open(`https://github.com/samwilkins333/${this.props.model.name}`);\n    }\n\n    private select = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (!this.selected) {\n            runInAction(() => this.selected = true);\n            this.setFontColor(\"#000000\");\n            this.props.setSelected(this);\n        }\n    }\n\n    deselect = action(() => {\n        this.selected = false;\n    });\n\n    private setFontColor = action((color: string) => {\n        this.color = color;\n    })\n\n    render() {\n        const { name, private: isPrivate } = this.props.model;\n        const marginTop = this.props.marginTop;\n        const pending = marginTop === 0\n        const border = pending ? \"none\" : `1px solid ${this.color}${this.selected ? \"FF\" : \"55\"}`;\n        return (\n            <div\n                className={'repository'}\n                onClick={this.select}\n                onPointerEnter={() => !this.selected && this.setFontColor(\"#FF0000\")}\n                onPointerLeave={() => this.setFontColor(\"#000000\")}\n                style={{\n                    marginTop,\n                    marginLeft: pending ? 3 : marginTop,\n                    marginRight: pending ? 3 : marginTop,\n                    border,\n                    cursor: isPrivate ? \"normal\" : \"pointer\",\n                    color: this.color,\n                    background: this.selected ? \"rgb(255, 0, 0, 0.3)\" : \"white\"\n                }}\n            >\n                <div>{name}</div>\n                {isPrivate && !pending ? <img\n                    src={privateIcon}\n                    width={40}\n                    className={'private'}\n                    title={'This repository is private'}\n                    alt={'This repository is private'}\n                /> : null}\n            </div>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}