{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repositories.tsx\";\n\nimport React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nconst username = \"samwilkins333\";\nconst apiEndpoint = \"https://api.github.com/user/repos\";\n\nlet Repositories = observer(_class = (_class2 = (_temp = class Repositories extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"repositories\", _descriptor, this);\n\n    this.populate = () => {\n      const headers = {\n        Authorization: \"token \".concat(process.env.REACT_APP_GITHUB_KEY)\n      };\n      fetch(apiEndpoint, {\n        headers\n      }).then(async response => {\n        const repositories = await response.json();\n        const mine = repositories.filter(repo => repo.full_name.startsWith(username));\n        runInAction(() => this.repositories = mine);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'repositories-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.repositories.map(repo => React.createElement(Repository, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"repositories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n})), _class2)) || _class;\n\nexport { Repositories as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repositories.tsx"],"names":["React","observable","runInAction","observer","username","apiEndpoint","Repositories","Component","populate","headers","Authorization","process","env","REACT_APP_GITHUB_KEY","fetch","then","response","repositories","json","mine","filter","repo","full_name","startsWith","render","map"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,MAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAG,mCAApB;;IAGqBC,Y,GADpBH,Q,8BAAD,MACqBG,YADrB,SAC0CN,KAAK,CAACO,SADhD,CAC8D;AAAA;AAAA;;AAAA;;AAAA,SAG1DC,QAH0D,GAG/C,MAAM;AACb,YAAMC,OAAO,GAAG;AAAEC,QAAAA,aAAa,kBAAWC,OAAO,CAACC,GAAR,CAAYC,oBAAvB;AAAf,OAAhB;AACAC,MAAAA,KAAK,CAACT,WAAD,EAAc;AAAEI,QAAAA;AAAF,OAAd,CAAL,CAAgCM,IAAhC,CAAqC,MAAMC,QAAN,IAAkB;AACnD,cAAMC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;AACA,cAAMC,IAAI,GAAGF,YAAY,CAACG,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,UAAf,CAA0BnB,QAA1B,CAA5B,CAAb;AACAF,QAAAA,WAAW,CAAC,MAAM,KAAKe,YAAL,GAAoBE,IAA3B,CAAX;AACH,OAJD;AAKH,KAVyD;AAAA;;AAY1DK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,YAAL,CAAkBQ,GAAlB,CAAsBJ,IAAI,IAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CADL,CADJ;AAKH;;AAlByD,C,uFACzDpB,U;;;;;WAAyC,E;;;;SADzBK,Y","sourcesContent":["import React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nconst username = \"samwilkins333\";\nconst apiEndpoint = \"https://api.github.com/user/repos\";\n\n@observer\nexport default class Repositories extends React.Component<{}> {\n    @observable private repositories: any[] = [];\n\n    populate = () => {\n        const headers = { Authorization: `token ${process.env.REACT_APP_GITHUB_KEY}` };\n        fetch(apiEndpoint, { headers }).then(async response => {\n            const repositories = await response.json() as any[];\n            const mine = repositories.filter(repo => repo.full_name.startsWith(username));\n            runInAction(() => this.repositories = mine);\n        });\n    }\n\n    render() {\n        return (\n            <div className={'repositories-container'}>\n                {this.repositories.map(repo => <Repository />)}\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}