{"ast":null,"code":"import _initializerDefineProperty from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _temp,\n    _jsxFileName = \"/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repositories.tsx\";\n\nimport React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Repository from './Repository';\nimport { BatchedArray, TimeUnit } from \"array-batcher\";\nconst username = \"samwilkins333\";\nconst apiEndpoint = \"https://api.github.com/user/repos\";\n\nlet Repositories = observer(_class = (_class2 = (_temp = class Repositories extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"repositories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"leftBorder\", _descriptor2, this);\n\n    this.populate = () => {\n      const headers = {\n        Authorization: \"token \".concat(process.env.REACT_APP_GITHUB_KEY)\n      };\n      fetch(apiEndpoint, {\n        headers\n      }).then(async response => {\n        const repositories = await response.json();\n        const mine = repositories.filter(repo => repo.full_name.startsWith(username));\n        await BatchedArray.from(mine, {\n          batchSize: 1\n        }).batchedForEachNaiveInterval({\n          magnitude: 100,\n          unit: TimeUnit.Milliseconds\n        }, batch => {\n          runInAction(() => this.repositories.push(...batch));\n        });\n        this.props.onLoad();\n        this.leftBorder = \"\";\n      });\n    };\n\n    this.displayRepositories = () => {\n      return this.repositories.map(repo => React.createElement(Repository, {\n        key: repo.id,\n        model: repo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'repositories-container',\n      style: {\n        borderLeft: \"1px solid 000000\".concat(this.leftBorder)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.displayRepositories());\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"repositories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"leftBorder\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"00\";\n  }\n})), _class2)) || _class;\n\nexport { Repositories as default };","map":{"version":3,"sources":["/Users/swilkinss2012/Documents/GitHub/PersonalWebsiteRework/samwilkins/src/Repositories/Repositories.tsx"],"names":["React","observable","runInAction","observer","Repository","BatchedArray","TimeUnit","username","apiEndpoint","Repositories","Component","populate","headers","Authorization","process","env","REACT_APP_GITHUB_KEY","fetch","then","response","repositories","json","mine","filter","repo","full_name","startsWith","from","batchSize","batchedForEachNaiveInterval","magnitude","unit","Milliseconds","batch","push","props","onLoad","leftBorder","displayRepositories","map","id","render","borderLeft"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,MAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,eAAvC;AAEA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAG,mCAApB;;IAOqBC,Y,GADpBN,Q,8BAAD,MACqBM,YADrB,SAC0CT,KAAK,CAACU,SADhD,CAC6E;AAAA;AAAA;;AAAA;;AAAA;;AAAA,SAIzEC,QAJyE,GAI9D,MAAM;AACb,YAAMC,OAAO,GAAG;AAAEC,QAAAA,aAAa,kBAAWC,OAAO,CAACC,GAAR,CAAYC,oBAAvB;AAAf,OAAhB;AACAC,MAAAA,KAAK,CAACT,WAAD,EAAc;AAAEI,QAAAA;AAAF,OAAd,CAAL,CAAgCM,IAAhC,CAAqC,MAAMC,QAAN,IAAkB;AACnD,cAAMC,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;AACA,cAAMC,IAAI,GAAGF,YAAY,CAACG,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,UAAf,CAA0BnB,QAA1B,CAA5B,CAAb;AACA,cAAMF,YAAY,CAACsB,IAAb,CAAkBL,IAAlB,EAAwB;AAAEM,UAAAA,SAAS,EAAE;AAAb,SAAxB,EAA0CC,2BAA1C,CACF;AAAEC,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,IAAI,EAAEzB,QAAQ,CAAC0B;AAAjC,SADE,EAEFC,KAAK,IAAI;AACL/B,UAAAA,WAAW,CAAC,MAAM,KAAKkB,YAAL,CAAkBc,IAAlB,CAAuB,GAAGD,KAA1B,CAAP,CAAX;AACH,SAJC,CAAN;AAMA,aAAKE,KAAL,CAAWC,MAAX;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACH,OAXD;AAYH,KAlBwE;;AAAA,SAoBzEC,mBApByE,GAoBnD,MAAM;AACxB,aAAO,KAAKlB,YAAL,CAAkBmB,GAAlB,CAAsBf,IAAI,IAC7B,oBAAC,UAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACgB,EADd;AAEI,QAAA,KAAK,EAAEhB,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAMH,KA3BwE;AAAA;;AA6BzEiB,EAAAA,MAAM,GAAG;AACL,WACI;AACI,MAAA,SAAS,EAAE,wBADf;AAEI,MAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,4BAAqB,KAAKL,UAA1B;AADP,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKC,mBAAL,EANL,CADJ;AAUH;;AAxCwE,C,uFACxErC,U;;;;;WAAyC,E;;+EACzCA,U;;;;;WAAgC,I;;;;SAFhBQ,Y","sourcesContent":["import React from 'react';\nimport \"./Repositories.css\";\nimport { observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Repository from './Repository';\nimport { BatchedArray, TimeUnit } from \"array-batcher\";\n\nconst username = \"samwilkins333\";\nconst apiEndpoint = \"https://api.github.com/user/repos\";\n\nexport interface RepositoriesProps {\n    onLoad: () => void;\n}\n\n@observer\nexport default class Repositories extends React.Component<RepositoriesProps> {\n    @observable private repositories: any[] = [];\n    @observable private leftBorder = \"00\";\n\n    populate = () => {\n        const headers = { Authorization: `token ${process.env.REACT_APP_GITHUB_KEY}` };\n        fetch(apiEndpoint, { headers }).then(async response => {\n            const repositories = await response.json() as any[];\n            const mine = repositories.filter(repo => repo.full_name.startsWith(username));\n            await BatchedArray.from(mine, { batchSize: 1 }).batchedForEachNaiveInterval(\n                { magnitude: 100, unit: TimeUnit.Milliseconds },\n                batch => {\n                    runInAction(() => this.repositories.push(...batch))\n                }\n            );\n            this.props.onLoad();\n            this.leftBorder = \"\";\n        });\n    }\n\n    displayRepositories = () => {\n        return this.repositories.map(repo =>\n            <Repository\n                key={repo.id}\n                model={repo}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div\n                className={'repositories-container'}\n                style={{\n                    borderLeft: `1px solid 000000${this.leftBorder}`\n                }}\n            >\n                {this.displayRepositories()}\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}